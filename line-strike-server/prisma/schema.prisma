// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("LINE_STRIKE_DB_URL")
}

model Account {
  id                     BigInt    @id @default(autoincrement())
  email                  String    @unique
  emailVerified          Boolean
  emailVerificationToken String?   @unique
  verificationSentAt     DateTime?
  passwordHash           String
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  names       Name[]       @relation("account_name")
  matchCounts MatchCount[] @relation("account_match")
  formatELOs  AccountELO[] @relation("account_elo")
}

model Name {
  id        BigInt   @id @default(autoincrement())
  value     String
  accountID BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation("account_name", fields: [accountID], references: [id])

  @@unique([accountID, value])
}

enum MatchType {
  UNRANKED
  RANKED
}

model MatchCount {
  id        BigInt    @id @default(autoincrement())
  formatID  Int
  wins      BigInt    @default(0)
  total     BigInt    @default(0)
  type      MatchType
  accountID BigInt
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  account Account @relation("account_match", fields: [accountID], references: [id])

  @@unique([formatID, accountID, type])
}

model AccountELO {
  id        BigInt   @id @default(autoincrement())
  formatID  Int
  value     Int      @default(1500)
  accountID BigInt
  matches   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation("account_elo", fields: [accountID], references: [id])

  @@unique([accountID, formatID])
}
